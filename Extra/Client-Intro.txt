 I'm Arindam Das, a QA Engineer with almost 3 years of experience, currently serving as a Full Stack QA professional. 
 In my recent project was in E-commerce domain, and the tech stack for the application included React for the frontend, 
 Java for the backend, and SQL for the database,Throughout this journey, we followed Agile methodologies, fostering efficiency and collaboration.
 
 When it comes to Automation Testing, I harnessed the capabilities of Cypress, a powerful UI automation tool. We followed 
 the Page Object Model design pattern to craft robust test cases, ensuring the functionality and stability of web applications. 
 for reporting we integration of the Cypress automation framework with Cypress Cloud and Git, our chosen version control tool,
 facilitated collaborative development. 
 
In the realm of manual testing, my responsibilities was requirements analysis, test coverage matrix creation test case formulation,
 and test execution. Defect tracking was seamlessly managed through JIRA, and Zephyr was our go-to test management tool.  I'm also 
 familiar with SQL for database testing.
 
During my initial journey into automation, I worked into Java Selenium Automation as well.






















 

My Role:

As a Full Stack QA Engineer, I played a crucial role in ensuring the quality and reliability 
of the entire software stack. My responsibilities extended across both manual and automated testing processes.

Role and Responsibility: 

1. Requirement Analysis:
2. Test Planning:
3.Test Case Design:
4. Test Execution (including creating automation srcipts)
5. log defect into jira
6. restrat the new sprint



Project Overview:

In my previous role, I had the opportunity to work on an E-commerce project that aimed to provide users with a seamless and 
secure online shopping experience. The project involved the development of a web application catering to a diverse range of 
products, employing technologies such as React for the frontend, Java for the backend, and SQL for the database.


QA Process:

1. Requirement Analysis:
Collaborated with the business analyst and product manager to thoroughly understand and analyze project requirements.

2. Test Planning:
Created comprehensive test plans outlining the testing approach, scope, resources, and schedule.

3. Test Case Design:
Developed detailed test cases covering various scenarios, including positive and negative test cases, boundary tests, and end-to-end flows.

4. Manual Testing:
Executed manual tests to validate the application's functionality, usability, and compatibility across different browsers and devices.
Logged defects in JIRA, providing detailed information and collaborating with the development team for timely resolutions.

5. Automation Testing:
Implemented UI automation tests using Cypress, following the Page Object Model design pattern.
Integrated the Cypress automation framework with Cypress Cloud for efficient test execution and management.

6. Test Management:
Utilized Zephyr for JIRA as the test management tool to organize, execute, and track manual test cases.
Maintained test coverage matrices to ensure comprehensive testing coverage.

7. Database Testing:
Conducted database testing using SQL queries to validate data integrity, accuracy, and consistency.

Challenges and Achievements:
Throughout the project, I encountered challenges such as handling dynamic content in the UI, ensuring data 
consistency across the database, and addressing cross-browser compatibility issues. These challenges provided 
valuable learning experiences, and I successfully implemented effective testing strategies to overcome them.



E-commerce project - First register if a new user if it's existing user then login
					 Serach the product based on price range,and fill all the details
					like address,payment mode and purchase the product successfully.
					then particular request is sent to database.
					
					

What are the things to check in the PR ?	
Check that the local branch and repository you're merging from, and the remote branch and repository you're merging into	
Comments
coding guidlines
naming convension
css selector should be properly 
code should be optimize
all variable should be used
					

